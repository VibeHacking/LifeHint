name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: dist/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    
    - name: Package and Upload Ubuntu build
      run: |
        cd artifacts/build-ubuntu-latest
        zip -r ../../LifeHint-${{ github.ref_name }}-linux.zip .
        cd ../..
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./LifeHint-${{ github.ref_name }}-linux.zip
        asset_name: LifeHint-${{ github.ref_name }}-linux.zip
        asset_content_type: application/zip
    
    - name: Package and Upload Windows build
      run: |
        cd artifacts/build-windows-latest
        zip -r ../../LifeHint-${{ github.ref_name }}-windows.zip .
        cd ../..
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./LifeHint-${{ github.ref_name }}-windows.zip
        asset_name: LifeHint-${{ github.ref_name }}-windows.zip
        asset_content_type: application/zip
    
    - name: Package and Upload macOS build
      run: |
        cd artifacts/build-macos-latest
        zip -r ../../LifeHint-${{ github.ref_name }}-macos.zip .
        cd ../..
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./LifeHint-${{ github.ref_name }}-macos.zip
        asset_name: LifeHint-${{ github.ref_name }}-macos.zip
        asset_content_type: application/zip